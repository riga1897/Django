 Общие критерии проекта
Решение выложено на GitHub.
В проекте есть файл 
.gitignore
.
В коммиты не добавлены игнорируемые файлы.
В проекте есть файл с зависимостями.
Файл с зависимостями содержит только необходимые для работы программы библиотеки.
При проверке линтером Flake8 обнаружено не более 5 ошибок.
Проект соответствует структуре проектов Django.
Созданы отдельные приложения для пользователей и рассылок.
Настройки приложения лежат в корне проекта в папке 
config
 или папке с названием проекта.
Произведены базовые настройки проекта.
Все необходимые данные вынесены в переменные окружения.
Корректно собран шаблон файла 
.env
.
 Модели
Произведены базовые настройки модели рассылки.
Модель рассылки cодержит все необходимые по ТЗ поля.
В файле 
models.py
 приложения рассылок создана модель рассылки.
Поля модели рассылки реализованы в соответствующих типах.
В репозиторий запушены миграции для модели рассылки.
В файле 
models.py
 приложения рассылок создана модель сообщения.
Произведены базовые настройки модели сообщения.
Модель сообщения cодержит все необходимые по ТЗ поля.
Поля модели сообщения реализованы в соответствующих типах.
В репозиторий запушены миграции для модели сообщения.
В файле 
models.py
 приложения рассылок создана модель получателя рассылки.
Произведены базовые настройки модели получателя рассылки.
Модель получателя рассылки cодержит все необходимые по ТЗ поля.
Поля модели получателя рассылки реализованы в соответствующих типах.
В репозиторий запушены миграции для модели получателя рассылки.
Связи между моделями построены согласно ТЗ.
В приложении пользователя реализована модель пользователя.
Модель пользователя отнаследована от 
AbstractUser
.
В модель пользователя добавлены поля email, аватар, номер телефона, страна в соответствующих типах.
В модели пользователя переопределено поле авторизации на email.
Произведены базовые настройки модели пользователя.
В репозиторий запушены миграции для приложения пользователя.
В настройках проекта заменена 
AUTH_USER_MODEL
 на текущую созданную.
В файле 
models.py
 приложения рассылок создана модель попытки рассылки.
Произведены базовые настройки модели попытки рассылки.
Модель попытки рассылки cодержит все необходимые по ТЗ поля.
Поля модели попытки рассылки реализованы в соответствующих типах.
В репозиторий запушены миграции для модели попытки рассылки.
 Контроллеры и шаблоны
Реализован контроллер регистрации пользователя в сервисе.
Реализован контроллер аутентификации пользователя в сервисе.
Реализован контроллер выхода пользователя в сервисе.
Реализован контроллер просмотра профиля пользователя в сервисе.
Реализован контроллер редактирования профиля пользователя в сервисе.
Созданы контроллеры СRUD-операций для сообщений.
Созданы шаблоны для контроллеров СRUD-операций для сообщений.
Шаблоны для работы с сообщениями используют базовый шаблон / подшаблоны.
Контроллеры CRUD-операций сообщений зарегистрированы на корректные URL.
Созданы контроллеры СRUD-операций для получателей рассылки.
Созданы шаблоны для контроллеров СRUD-операций для получателей рассылки.
Шаблоны для работы с получателями рассылки используют базовый шаблон / подшаблоны.
Контроллеры CRUD-операций клиентов зарегистрированы на корректные URL.
Созданы контроллеры СRUD-операций для рассылок.
Созданы шаблоны для контроллеров СRUD-операций для рассылок.
Шаблоны для работы с рассылками используют базовый шаблон / подшаблоны.
Контроллеры CRUD-операций рассылок зарегистрированы на корректные URL.
 Интерфейс
В интерфейс добавлена кнопка «Вход» для взаимодействия с контроллерами.
В интерфейс добавлена кнопка «Выход» для взаимодействия с контроллерами.
В интерфейс добавлена кнопка «Регистрация» для взаимодействия с контроллерами.
После авторизации пользователя кнопка «Вход» заменяется на «Выход».
После авторизации пользователя кнопка «Регистрация» исчезает.
На главной странице выводится необходимая информация по ТЗ.
В шаблон главной страницы передается контекст с необходимыми данными по ТЗ.
Шаблон главной страницы отображает данные корректно.
Выделены отдельные страницы для получателей рассылки, сообщений и рассылок.
В хедере есть кнопки перехода по соответствующим разделам.
Кнопки перехода открыты только авторизованным пользователям.
На страницах сообщений, рассылок и получателей рассылки есть кнопки создания, изменения и удаления.
Кнопки ведут на верные URL.
Выделена отдельная страница для попыток рассылок.
В хедере есть кнопка перехода на страницу попыток рассылки.
Кнопка перехода открыта только авторизованным пользователям.
Кнопки ведут на верные URL.
 Права доступа
В модели рассылок в класс 
Meta
 добавлены права для менеджеров согласно ТЗ.
В модели сообщений в класс 
Meta
 добавлены права для менеджеров согласно ТЗ.
В модели получателей рассылки в класс 
Meta
 добавлены права для менеджеров согласно ТЗ.
Создана группа «Менеджеры».
Создана команда для наполнения базы данных группой «Менеджеры».
В контроллере создания рассылки, получателя рассылки и сообщения переопределен метод 
fom_valid()
, в котором при создании сущности в поле 
owner
 прописывается текущий пользователь.
В модели рассылки, получателя рассылки и сообщения добавлено поле «Владелец», если не было добавлено ранее.
Каждый пользователь имеет доступ только к своим рассылкам.
Каждый пользователь имеет доступ только к своим получателям рассылки.
Реализованы проверки в шаблонах для ограничения доступа к сущностям.
В контроллерах переопределены QuerySet’ы для фильтрации по владельцам.
 Кеширование
Настроено серверное кеширование.
 Рассылки
Собрана страница с отчетами по рассылке каждого пользователя.
Реализована отправка рассылки через интерфейс.
Реализована отправка рассылки через командную строку (кастомной командой).