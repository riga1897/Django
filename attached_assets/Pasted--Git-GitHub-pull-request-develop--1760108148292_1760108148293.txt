 Работа с Git и GitHub
Домашка сдана через pull request из ветки домашней работы в ветку 
develop
.
В коммиты не добавлены игнорируемые файлы.
 Базовые настройки проекта
В проекте есть файл с зависимостями.
 Работа с пользователями
Создано новое приложение для работы с пользователями.
Реализована модель пользователя, которая отнаследована от 
AbstractUser
.
В модель добавлены поля email, аватар, номер телефона, страна в соответствующих типах.
Переопределено поле авторизации на email.
Сделаны и запушены миграции нового приложения.
В настройках проекта заменена 
AUTH_USER_MODEL
 на текущую созданную.
Произведены базовые настройки модели.
 Регистрация
Создана форма для регистрации пользователя.
Создан контроллер регистрации пользователя, который взаимодействует с формой.
Определены и собраны шаблоны для регистрации.
Шаблоны рендерятся корректно.
В интерфейс интегрирована кнопка регистрации.
Переопределен метод 
form_valid()
 в контроллере регистрации, в который интегрирована отправка приветственного сообщения.
Произведены настройки почтового сервера в настройках проекта.
 Авторизация
Реализована авторизация пользователя.
Реализована форма авторизации.
Реализован шаблон для логина.
Шаблон рендерится корректно.
В интерфейс интегрирована кнопка входа.
 Ограничение доступа
Контроллеры для работы с продуктами дополнительно наследуются от 
LoginRequiredMixin
.
Общедоступной осталась только страница просмотра списка товаров.
С ростом сервиса часто приходят боты, которые нацелены на то, чтобы заполнить своими спам-сообщениями любую открытую форму для заполнения. Именно поэтому создаются проверки на робота или устанавливаются ограничения на важные формы, чтобы сделать их доступными только для зарегистрированных пользователей.

Для сервиса интернет-магазина необходимо реализовать функцию аутентификации пользователей, чтобы боты не могли вмешиваться в работу сервиса.

Задание 1
Создайте новое приложение для работы с пользователями в вашем проекте Django.
Определите модель пользователя с использованием 
AbstractUser
, задав электронную почту как поле для авторизации.
Добавьте дополнительные поля в модель пользователя:
аватар (изображение),
номер телефона,
страна.
Задание 2
В сервисе реализуйте функцию аутентификации, а именно:

Регистрация пользователя:
Создайте форму для регистрации пользователя с полями электронной почты и пароля.
Добавьте логику регистрации в представлении, позволяя пользователю создать учетную запись.
Реализуйте отправку приветственного письма пользователю после регистрации.
Авторизация пользователя:
Настройте форму и представление для авторизации пользователя по электронной почте и паролю.
Задание 3
Закройте доступ к страницам, связанным с управлением продуктами, для анонимных пользователей. Убедитесь, что только авторизованные пользователи могут просматривать, создавать, изменять и удалять продукты. Общедоступной должна остаться только страница просмотра списка товаров.

* Дополнительное задание
Добавьте интерфейс редактирования профиля пользователя.